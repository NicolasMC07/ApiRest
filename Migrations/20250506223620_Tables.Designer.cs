// <auto-generated />
using System;
using ApiRest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiRest.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250506223620_Tables")]
    partial class Tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ApiRest.Models.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .HasColumnType("longtext");

                    b.Property<string>("NewValues")
                        .HasColumnType("longtext");

                    b.Property<string>("OldValues")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AuditLogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Action = 0,
                            EntityId = 1,
                            EntityName = "Room",
                            NewValues = "Room created: Sala Manhattan",
                            Timestamp = new DateTime(2025, 5, 3, 22, 36, 20, 637, DateTimeKind.Utc).AddTicks(9149),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Action = 0,
                            EntityId = 1,
                            EntityName = "Booking",
                            NewValues = "Booking created for room Sala Manhattan",
                            Timestamp = new DateTime(2025, 5, 5, 22, 36, 20, 637, DateTimeKind.Utc).AddTicks(9172),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Action = 1,
                            EntityId = 4,
                            EntityName = "Booking",
                            NewValues = "IsCancelled: true",
                            OldValues = "IsCancelled: false",
                            Timestamp = new DateTime(2025, 5, 6, 20, 36, 20, 637, DateTimeKind.Utc).AddTicks(9196),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("ApiRest.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 5, 6, 22, 36, 20, 637, DateTimeKind.Utc).AddTicks(8925),
                            EndTime = new DateTime(2025, 5, 8, 9, 36, 20, 637, DateTimeKind.Utc).AddTicks(8915),
                            IsCancelled = false,
                            RoomId = 1,
                            StartTime = new DateTime(2025, 5, 8, 7, 36, 20, 637, DateTimeKind.Utc).AddTicks(8896),
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 5, 6, 22, 36, 20, 637, DateTimeKind.Utc).AddTicks(8978),
                            EndTime = new DateTime(2025, 5, 9, 14, 36, 20, 637, DateTimeKind.Utc).AddTicks(8964),
                            IsCancelled = false,
                            RoomId = 2,
                            StartTime = new DateTime(2025, 5, 9, 12, 36, 20, 637, DateTimeKind.Utc).AddTicks(8954),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 5, 6, 22, 36, 20, 637, DateTimeKind.Utc).AddTicks(9025),
                            EndTime = new DateTime(2025, 5, 10, 10, 36, 20, 637, DateTimeKind.Utc).AddTicks(9011),
                            IsCancelled = false,
                            RoomId = 3,
                            StartTime = new DateTime(2025, 5, 10, 8, 36, 20, 637, DateTimeKind.Utc).AddTicks(9001),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 5, 4, 22, 36, 20, 637, DateTimeKind.Utc).AddTicks(9072),
                            EndTime = new DateTime(2025, 5, 6, 15, 36, 20, 637, DateTimeKind.Utc).AddTicks(9058),
                            IsCancelled = true,
                            RoomId = 4,
                            StartTime = new DateTime(2025, 5, 6, 7, 36, 20, 637, DateTimeKind.Utc).AddTicks(9048),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("ApiRest.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 6,
                            CreatedAt = new DateTime(2025, 5, 6, 22, 36, 20, 312, DateTimeKind.Utc).AddTicks(7079),
                            Description = "Sala pequeña con vista al centro de la ciudad",
                            Name = "Sala Manhattan"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 12,
                            CreatedAt = new DateTime(2025, 5, 6, 22, 36, 20, 312, DateTimeKind.Utc).AddTicks(7103),
                            Description = "Sala principal para reuniones importantes",
                            Name = "Sala Central"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 2,
                            CreatedAt = new DateTime(2025, 5, 6, 22, 36, 20, 312, DateTimeKind.Utc).AddTicks(7127),
                            Description = "Oficina insonorizada para trabajo concentrado",
                            Name = "Oficina Silencio"
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 20,
                            CreatedAt = new DateTime(2025, 5, 6, 22, 36, 20, 312, DateTimeKind.Utc).AddTicks(7260),
                            Description = "Espacio abierto con mesas compartidas",
                            Name = "Área Colaborativa"
                        });
                });

            modelBuilder.Entity("ApiRest.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 5, 6, 22, 36, 20, 421, DateTimeKind.Utc).AddTicks(3415),
                            Email = "admin@coworking.com",
                            Password = "$2a$11$Fp5ZcduCeLF.tfgLaX9V2urkvLDHkpomT2VuLigwhAmwJ2SYORfGu",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 5, 6, 22, 36, 20, 529, DateTimeKind.Utc).AddTicks(9984),
                            Email = "user1@test.com",
                            Password = "$2a$11$i13CBPqHNRtYYn8YXfcu.uizhPB/mDdnGzhgPPaxaHsFJhd7HaA5i",
                            Username = "user1"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 5, 6, 22, 36, 20, 637, DateTimeKind.Utc).AddTicks(8524),
                            Email = "user2@test.com",
                            Password = "$2a$11$wUaSaZ8IrB6NpllEk2ebueulrV8UMrSj6.U2uYjtASF38r2gSwaqC",
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("ApiRest.Models.AuditLog", b =>
                {
                    b.HasOne("ApiRest.Models.User", "User")
                        .WithMany("AuditLogs")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApiRest.Models.Booking", b =>
                {
                    b.HasOne("ApiRest.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiRest.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApiRest.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("ApiRest.Models.User", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
